/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include "TestClass.s3d"
#include "Serializer.s3d"
#include "XVRFile.s3d"

/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.5;
SET SCENE_FAR  = 1000;


// TODO: put your global variables here


/* Light globals */
var Light0;
var PosL = [0.0, 10.0, 10.0];	// default light position

var tc;
var new_tc;
var tc_serializer;
var file;

/* Function declarations */
function CameraMoveMouse();

function OnDownload()
{
	// TODO: download your resources here
	// E.g.: FileDownload("resource.ext");
}


function OnInit(params)
{
	/* initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();	

	// TODO: put your initialization code here
	tc = TestClass();
	tc.name = "Padre";
	tc.id = 1;
	tc.myarray = {true, 1, "Lorem"};
	tc.child = ChildClass();
	tc.child.name = "Figlio";
	tc.vec = [1,2,3];
	tc.child.id = 2;
	var nepow = ChildClass();
	nepow.id = 3;
	nepow.name = "Nepow";
	tc.child.arr = {"Stringa in array di figlio", nepow};

	
	tc.children = {tc.child, tc.child, true, 2, "Ipsum"};
	tc_serializer = Serializer();
	
//	file = XVRFile();
//	file.open("final.dat", "wb");
	
	var sstring = tc_serializer.Serialize(tc);
	
//	file.bwrite(sstring);
//	file.close();
	
	outputln("### SERIALIZATION ###");
	outputln(sstring);
	outputln("### DESERIALIZATION ###");
	var new_tc = TestClass();
	
//	file.open("final.dat", "rb");
//	var blen = file.getLen();
//	var sstring = space(blen);
//	file.bread(&sstring, blen);
	
	new_tc = tc_serializer.Deserialize(sstring);
	outputln("Parent Name: ", new_tc.name);
	outputln("Parent ID: ", new_tc.id);
	outputln("Child name: ", new_tc.child.name);
	outputln("Child ID: ", new_tc.child.id);
	outputln("Children: ", new_tc.children);
	outputln("Children array string: ", new_tc.child.arr[0]);
	outputln("Nepow name: ", new_tc.children[1].arr[1].name);
	outputln("Nepow id: ", new_tc.children[1].arr[1].id);
	outputln("Father vector [1]: ", new_tc.vec[1]);
}

function OnFrame()
{
	/* manage camera */
	CameraMoveMouse();

	SceneBegin();

	// TODO: put your drawing code here

	SceneEnd();
}



function DownloadReady(RequestID)
{
	// TODO
}



function OnTimer()
{
	// TODO:
}


function OnEvent(eventID, wparam, lparam){
	// TODO: put your events handling code here
}

function OnError(){
	// TODO: put your errors handling code here
}


function OnExit()
{
	// TODO: put your cleanup code here
}



// Camera manager (using mouse)
function CameraMoveMouse()
{	

}
